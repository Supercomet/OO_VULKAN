#version 460

layout (local_size_x = 16, local_size_y = 16) in;
layout (set=0, binding = 0) uniform sampler basicSampler;
layout (set=0, binding = 1) uniform textureCube inputImage;
layout (set=0, binding = 2) uniform writeonly image2DArray resultImage;

void main()
{	
	
	vec3 N = normalize( vec3(1,0,0) );
	ivec2 sz = textureSize(samplerCube(inputImage,basicSampler),0);
	vec2 uv = vec2(gl_GlobalInvocationID.xy)/sz;
	vec2 coords = (uv - 0.5) * 2;

	vec3 sampleDir = normalize(vec3(N.x,coords.x,coords.y));

	vec4 inputVal = texture(samplerCube(inputImage,basicSampler), sampleDir);
  

	 //Note: Store operations to any texel that is outside the boundaries of the bound image will do nothing.
	imageStore(resultImage, ivec3(gl_GlobalInvocationID.xy, 0), inputVal);
}
