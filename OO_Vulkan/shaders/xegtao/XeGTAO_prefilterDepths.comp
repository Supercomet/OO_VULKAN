#version 450
// Engine-specific entry point for the first pass
#include "XeGTAO.glsl"
 layout (set = 0, binding = 0)
uniform cbxegato_t {
GTAOConstants g_GTAOConsts;
};
layout (set=0, binding = 1/*,rgba16f*/) uniform texture2D g_srcRawDepth;
layout (set=0, binding = 2)uniform sampler g_samplerPointClamp;

layout (set=0, binding = 3, r32f) uniform image2D g_outWorkingDepthMIP0;
layout (set=0, binding = 4, r32f) uniform image2D g_outWorkingDepthMIP1;
layout (set=0, binding = 5, r32f) uniform image2D g_outWorkingDepthMIP2;
layout (set=0, binding = 6, r32f) uniform image2D g_outWorkingDepthMIP3;
layout (set=0, binding = 7, r32f) uniform image2D g_outWorkingDepthMIP4;

layout (local_size_x = 8, local_size_y = 8) in; // <- hard coded to 8x8; each thread computes 2x2 blocks so processing 16x16 block: Dispatch needs to be called with (width + 16-1) / 16, (height + 16-1) / 16
void main()
{
    uint2 dispatchThreadID = gl_GlobalInvocationID.xy;
    uint2 groupThreadID = gl_LocalInvocationID.xy;
    
    XeGTAO_PrefilterDepths16x16( 
    dispatchThreadID
    , groupThreadID
    , g_GTAOConsts
    , g_srcRawDepth
    , g_samplerPointClamp
    , g_outWorkingDepthMIP0
    , g_outWorkingDepthMIP1
    , g_outWorkingDepthMIP2
    , g_outWorkingDepthMIP3
    , g_outWorkingDepthMIP4 
    );
}
